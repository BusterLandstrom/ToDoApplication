<Application x:Class="ToDoApplication.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ToDoApplication"
             xmlns:variable="clr-namespace:ToDoApplication.VariableControllers"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

    <!-- 
        Custom Items:
    -->


        <!-- Widget template -->
        <Style TargetType="UserControl" x:Key="WidgetTemplate">

            <!-- Variables -->
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <!-- Set default width -->
            <Setter Property="Width" Value="Auto"/>
            <!-- Set default height -->
            <Setter Property="Height" Value="Auto"/>
            <!-- Forcing to always use same Font -->
            <Setter Property="FontFamily" Value="{DynamicResource Nunito}"/>

            <!-- Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="UserControl">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter Margin="10"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <!-- 
        Custom Styles:
    -->

        <!-- Button Style -->
        <Style x:Key="RoundButton" TargetType="{x:Type Button}" >
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Style.Resources>
            <Setter Property="Background" Value="{DynamicResource selectableColor}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
        </Style>

        <Style x:Key="RoundTextBox" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>


        <!-- GridViewColumnHeader Style -->
        <Style x:Key="CustomHeader" TargetType="GridViewColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="80"/>
            <Setter Property="Foreground" Value="{DynamicResource textColor}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid>
                            <Border x:Name="HeaderBorder" Background="Transparent">
                                <ContentPresenter x:Name="HeaderContent"
                          RecognizesAccessKey="True"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Removes mouse over and click functionality for textbox -->
        <Style TargetType="TextBox" x:Key="NoMouseOverTextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="10,10,10,10">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20" />
                </Style>
            </Style.Resources>
        </Style>


    <!-- 
        Custom Variables:
    -->

        <!-- Colors -->
        <SolidColorBrush x:Key="backgroundColor" Color="#FF6B6B"/>
        <SolidColorBrush x:Key="textColor" Color="#3D405B"/>
        <SolidColorBrush x:Key="widgetColor" Color="#F4F1DE"/>
        <SolidColorBrush x:Key="selectableColor" Color="#CFCCB6"/>
        
        <!-- FontFamily -->
        <FontFamily x:Key="Nunito">Assets\Fonts\Nunito.ttf#Nunito</FontFamily>
        
        
        <!-- Variable Controllers -->
        <variable:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <variable:StringToColorConverter x:Key="StringToColorConverter" />
        <variable:BoolInverter x:Key="BoolInverter" />
    </Application.Resources>
</Application>
