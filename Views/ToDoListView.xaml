<UserControl x:Class="ToDoApplication.Views.ToDoListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ToDoApplication.Views"
             xmlns:parent="clr-namespace:ToDoApplication"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:variables="clr-namespace:ToDoApplication.VariableControllers"
             mc:Ignorable="d" Style="{StaticResource WidgetTemplate}"
             d:DesignWidth="1920" Background="Transparent"
             d:DesignHeight="1080">
    <UserControl.Resources>
        <!-- TaskItem template -->
        <DataTemplate x:Key="TaskItemTemplate">
            <Border Background="{DynamicResource widgetColor}" CornerRadius="10" Margin="10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Done Checkmark -->
                    <Grid Width="20" Height="20" Margin="10,5,5,5">
                        <Ellipse Fill="White" Stroke="Black" StrokeThickness="1">
                            <Ellipse.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.toggleDone, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/> <!-- Turns task done -->
                            </Ellipse.InputBindings>
                        </Ellipse>
                        <Path Data="M0,7 L5,12 L13,0" Stroke="Black" StrokeThickness="2"
                              HorizontalAlignment="Center" VerticalAlignment="Center"
                              Visibility="{Binding Done, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Path.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.toggleDone, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                                <!-- Turns task done -->
                            </Path.InputBindings>
                        </Path>
                    </Grid>

                    <!-- Name of ToDoItem -->
                    <TextBlock Grid.Column="1" Margin="10,5,5,5" VerticalAlignment="Center" x:Name="ItemName" Text="{Binding Name}" FontSize="20" Foreground="{DynamicResource textColor}">
                        <TextBlock.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.editTask, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                        </TextBlock.InputBindings>
                    </TextBlock>

                    <!-- Status Color Dot (Might be improved to also be able to toggle the statusText) -->
                    <Ellipse Width="15" Height="15" Grid.Column="2" Margin="5">
                        <Ellipse.Fill>
                            <Binding Path="Status.colorValue" Converter="{StaticResource SingleStringToColorConverter}"/>
                        </Ellipse.Fill>
                        <Ellipse.ToolTip>
                            <Binding Path="Status.statusText"/>
                        </Ellipse.ToolTip>
                    </Ellipse>

                    <!-- Steps Done / Total Steps -->
                    <TextBlock Grid.Column="3" VerticalAlignment="Center" Margin="5" Foreground="{DynamicResource textColor}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}/{1}">
                                <Binding Path="StepsDone"/>
                                <Binding Path="TotalSteps"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                </Grid>
            </Border>
        </DataTemplate>

        <!-- Task Entry Template -->
        <DataTemplate x:Key="TaskEntryTemplate">
            <Grid HorizontalAlignment="Stretch" Margin="10">
                <Rectangle Fill="{DynamicResource widgetColor}" RadiusX="10" RadiusY="10"/>
                <xctk:WatermarkTextBox Watermark="New task"
                     Foreground="{DynamicResource textColor}"
                     HorizontalAlignment="Stretch" VerticalAlignment="Center"
                     FontSize="16" Margin="20,5,5,5" Background="Transparent"
                     BorderThickness="0" x:Name="EnterText">
                    <xctk:WatermarkTextBox.InputBindings>
                        <KeyBinding Command="{Binding DataContext.createTask, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding ElementName=EnterText}" Key="Return"/>
                    </xctk:WatermarkTextBox.InputBindings>
                </xctk:WatermarkTextBox>
            </Grid>
        </DataTemplate>

        <!-- Set up the TaskTemplateSelector -->
        <variables:TaskTemplateSelector x:Key="TaskSelector"
                                TaskItemTemplate="{StaticResource TaskItemTemplate}"
                                TaskEntryTemplate="{StaticResource TaskEntryTemplate}"/>
    </UserControl.Resources>
    <Grid>
        <ListView ItemsSource="{Binding Items}" 
                  Background="Transparent" 
                  BorderBrush="Transparent"
                  Margin="20"
                  ItemTemplateSelector="{StaticResource TaskSelector}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Foreground" Value="{DynamicResource textColor}"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Height" Value="70"/>
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</UserControl>
